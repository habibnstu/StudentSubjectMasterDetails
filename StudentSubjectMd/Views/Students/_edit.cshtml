@model StudentSubjectMd.Models.ViewModels.StudentVM
<div class="container">
    @using (Html.BeginForm("Edit", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div class="col-6">
                <h2>Add New Student</h2>
                @Html.HiddenFor(x => x.StudentId)
                @Html.HiddenFor(x => x.Image)

                <div class="row mb-2">
                    @Html.LabelFor(x => x.StudentName, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextBoxFor(x => x.StudentName, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(x => x.StudentName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-2">
                    @Html.LabelFor(x => x.StudentRoll, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextBoxFor(x => x.StudentRoll, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(x => x.StudentRoll, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-2">
                    @Html.LabelFor(x => x.Group, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextBoxFor(x => x.Group, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(x => x.Group, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-2">
                    @Html.LabelFor(x => x.StudentClass, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextBoxFor(x => x.StudentClass, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(x => x.StudentClass, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row mb-2">
                    @Html.LabelFor(x => x.StudentPhone, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextBoxFor(x => x.StudentPhone, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(x => x.StudentPhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-2">
                    @Html.LabelFor(x => x.GuardianPhone, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextBoxFor(x => x.GuardianPhone, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(x => x.GuardianPhone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row mb-2">
                    @Html.LabelFor(x => x.StudentAddress, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextAreaFor(x => x.StudentAddress, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(x => x.StudentAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-2">
                    @Html.LabelFor(x => x.AdmissionFee, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextBoxFor(x => x.AdmissionFee, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(x => x.AdmissionFee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-2">
                    @Html.LabelFor(x => x.AdmissionDate, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.EditorFor(x => x.AdmissionDate, new { @class = "form-control form-control-sm", Type = "date" })
                    </div>
                </div>

                <div class="row mb-2">
                    @Html.LabelFor(x => x.ImageFile, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.TextBoxFor(x => x.ImageFile, new { @class = "form-control form-control-sm", Type = "file" })
                    </div>
                </div>

                <div class="row mb-2">
                    @Html.LabelFor(x => x.IsRegural, new { @class = "col-4 col-form-label col-form-label-sm" })
                    <div class="col-8">
                        @Html.CheckBoxFor(x => x.IsRegural)
                    </div>
                </div>
            </div>
            <div class="col-6">
                <h2 class="text-primary d-flex justify-content-between">
                    Subject List
                    <button class="btn btn-primary btnAddSubject">Add</button>
                </h2>
                <div class="con">
                    @foreach (var item in Model.StudentDetails)
                    {
                        @Html.Action("AddSubject", "",new {id=item.Subject.SubjectId})
                    }

                </div>
            </div>
            <div class="d-flex justify-content-end">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>

        </div>
    }
</div>

<script>
    $(".btnAddSubject").click((e) => {
        e.preventDefault();
        $.ajax({
            url: "/Students/AddSubject",
            type: "GET",
            success: (d) => {
                $(".con").append(d)
            }
        })
    })
</script>

